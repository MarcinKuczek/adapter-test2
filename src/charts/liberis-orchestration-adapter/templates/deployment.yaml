apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "liberis-orchestration-adapter.fullname" . }}
  labels:
    app: {{ template "liberis-orchestration-adapter.name" . }}
    chart: {{ template "liberis-orchestration-adapter.chart" . }}
    draft: {{ .Values.draft | default "draft-app" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "liberis-orchestration-adapter.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "liberis-orchestration-adapter.name" . }}
        draft: {{ .Values.draft | default "draft-app" }}
        release: {{ .Release.Name }}
      annotations:
        buildID: {{ .Values.buildID | default "" | quote }}
    spec:
{{ if .Values.image.useImagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Chart.Name }}-acr-secret
{{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: secrets-appsettings
              mountPath: /app/secrets
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 10
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.aspnetEnvironment }}
      volumes:
        - name: secrets-appsettings
          secret:
            secretName: {{ .Values.secretName }}
